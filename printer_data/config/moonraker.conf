[server]
host: 0.0.0.0
port: 7125
klippy_uds_address: /home/pi/printer_data/comms/klippy.sock

[authorization]
trusted_clients:
    10.0.0.0/8
    127.0.0.0/8
    169.254.0.0/16
    172.16.0.0/12
    192.168.0.0/16
    FE80::/10
    ::1/128
cors_domains:
    *.lan
    *.local
    *://localhost
    *://localhost:*
    *://my.mainsail.xyz
    *://app.fluidd.xyz

[octoprint_compat]

[history]

[update_manager]
channel: dev
refresh_interval: 168

[update_manager fluidd-config]
type: git_repo
primary_branch: master
path: ~/fluidd-config
origin: https://github.com/fluidd-core/fluidd-config.git
managed_services: klipper

[update_manager fluidd]
type: web
channel: stable
repo: fluidd-core/fluidd
path: ~/fluidd

[include octoapp-system.cfg]


;[webcam Camera]
;location: Bed
;enabled: True
;service: mjpegstreamer
;target_fps: 5
;target_fps_idle: 5
;stream_url: http://192.168.1.11:8080/?action=stream
;snapshot_url: http://192.168.1.11:8080/?action=snapshot
;flip_horizontal: False
;flip_vertical: False
;rotation: 0
;aspect_ratio: 4:3

# moonraker.conf

;[update_manager timelapse]
;type: git_repo
;primary_branch: main
;path: ~/moonraker-timelapse
;origin: https://github.com/mainsail-crew/moonraker-timelapse.git
;managed_services: klipper moonraker

# moonraker.conf

;[timelapse]
##   Following basic configuration is default to most images and don't need
##   to be changed in most scenarios. Only uncomment and change it if your
##   Image differ from standart installations. In most common scenarios 
##   a User only need [timelapse] in their configuration.
#output_path: ~/timelapse/
##   Directory where the generated video will be saved
#frame_path: /tmp/timelapse/
##   Directory where the temporary frames are saved
#ffmpeg_binary_path: /usr/bin/ffmpeg
##   Directory where ffmpeg is installed


[update_manager happy-hare]
type: git_repo
path: ~/Happy-Hare
origin: https://github.com/moggieuk/Happy-Hare.git
primary_branch: main
install_script: install.sh
managed_services: klipper

[mmu_server]
enable_file_preprocessor: True
enable_toolchange_next_pos: True
update_spoolman_location: True


[update_manager KlipperScreen]
type: git_repo
path: ~/KlipperScreen
origin: https://github.com/moggieuk/KlipperScreen-Happy-Hare-Edition.git
env: ~/.KlipperScreen-env/bin/python
requirements: scripts/KlipperScreen-requirements.txt
install_script: scripts/KlipperScreen-install.sh
managed_services: KlipperScreen


[update_manager cartographer]
type: git_repo
path: ~/cartographer-klipper
channel: stable
origin: https://github.com/Cartographer3D/cartographer-klipper.git
is_system_service: False
managed_services: klipper
info_tags:
  desc=Cartographer Probe
# Crowsnest update_manager entry
[update_manager crowsnest]
type: git_repo
path: ~/crowsnest
origin: https://github.com/mainsail-crew/crowsnest.git
managed_services: crowsnest
install_script: tools/pkglist.sh
[update_manager klipper-backup]
type: git_repo
path: ~/klipper-backup
origin: https://github.com/Staubgeborener/klipper-backup.git
managed_services: moonraker
primary_branch: main

;[update_manager mainsail-config]
;type: git_repo
;primary_branch: master
;path: ~/mainsail-config
;origin: https://github.com/mainsail-crew/mainsail-config.git
;managed_services: klipper

;[update_manager mainsail]
;type: web
;channel: stable
;repo: mainsail-crew/mainsail
;path: ~/mainsail

# Sonar update_manager entry
;[update_manager sonar]
;type: git_repo
;path: ~/sonar
;origin: https://github.com/mainsail-crew/sonar.git
;primary_branch: main
;managed_services: sonar
;install_script: tools/install.sh

# DynamicMacros Update Manager
[update_manager DynamicMacros]
type: git_repo
path: ~/DynamicMacros
origin: https://github.com/3DCoded/DynamicMacros.git
primary_branch: main
is_system_service: False
install_script: install.sh
